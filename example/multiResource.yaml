Parameters:
  NameOfService:
    Description: "Here you enter name of the service this stack is to be used for."
    Type: String
  InstanceTypeParameter:
    Description: Enter t2.nano, t2.micro, t2.small, t3.nano, t3.micro or t3.small. Default is t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t3.nano
      - t3.micro
      - t3.small
  KeyNameParameter:
    Description: EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
Mappings: 
  AmiRegionMap: 
    us-east-1: 
      AMI: "ami-0df8c184d5f6ae949"
    us-west-1: 
      AMI: "ami-0118dc74bd8f98b13"
    eu-central-1: 
      AMI: "ami-0cdd6d7420844683b"
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyNameParameter
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Join
            - "-"
            - - !Ref NameOfService
              - !Ref "AWS::Region"
      SecurityGroups:
        - !Ref exampleSG
        
  exampleSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH & HTTP from anywhere
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      # SecurityGroupEgress:
      # - IpProtocol: tcp
      #   FromPort: 80
      #   ToPort: 80
      #   CidrIp: 0.0.0.0/0